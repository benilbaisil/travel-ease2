<?php
ob_start(); // Start output buffering
require_once 'config.php';
require_once 'TCPDF/tcpdf.php';
session_start();

// Check if user is logged in and is an admin
if (!isset($_SESSION['user_id']) || $_SESSION['user_role'] !== 'Admin') {
    ob_end_clean(); // Clean output buffer
    header('HTTP/1.1 403 Forbidden');
    echo json_encode(['error' => 'Access denied']);
    exit;
}

// Get date range parameters
$startDate = isset($_GET['start_date']) ? $_GET['start_date'] : null;
$endDate = isset($_GET['end_date']) ? $_GET['end_date'] : null;

if (!$startDate || !$endDate) {
    ob_end_clean(); // Clean output buffer
    header('HTTP/1.1 400 Bad Request');
    echo json_encode(['error' => 'Start and end dates are required']);
    exit;
}

// Validate date format
if (!strtotime($startDate) || !strtotime($endDate)) {
    ob_end_clean(); // Clean output buffer
    header('HTTP/1.1 400 Bad Request');
    echo json_encode(['error' => 'Invalid date format']);
    exit;
}

// We don't need to create a new connection since it's already done in config.php
// Remove any whitespace or output before PDF generation
if (ob_get_length()) ob_clean();

// Fetch payment data for the selected date range
$query = "
    SELECT 
        p.id as payment_id,
        p.amount,
        p.mode as payment_method,
        p.status as payment_status,
        p.transaction_id,
        p.created_at as payment_date,
        b.id as booking_id,
        b.booking_status,
        b.travel_date,
        u.name as user_name,
        u.email as user_email,
        tp.package_name,
        tp.price as package_price
    FROM payment p
    JOIN bookings b ON p.booking_id = b.id
    JOIN users u ON b.user_id = u.user_id
    JOIN travel_packages tp ON b.package_id = tp.id
    WHERE DATE(p.created_at) BETWEEN ? AND ?
    ORDER BY p.created_at DESC
";

$stmt = $conn->prepare($query);
$stmt->bind_param("ss", $startDate, $endDate);
$stmt->execute();
$result = $stmt->get_result();

// Initialize statistics
$totalPayments = 0;
$totalAmount = 0;
$successfulPayments = 0;
$failedPayments = 0;
$uniqueUsers = [];
$paymentMethods = [];
$payments = [];

while ($row = $result->fetch_assoc()) {
    $payments[] = $row;
    $totalPayments++;
    $totalAmount += $row['amount'];
    
    if (strtolower($row['payment_status']) === 'success') {
        $successfulPayments++;
    } elseif (strtolower($row['payment_status']) === 'failed') {
        $failedPayments++;
    }
    
    $uniqueUsers[$row['user_email']] = true;
    $paymentMethods[$row['payment_method']] = ($paymentMethods[$row['payment_method']] ?? 0) + 1;
}

// Create PDF
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

// Set document information
$pdf->SetCreator('Travel Ease');
$pdf->SetAuthor('Admin');
$pdf->SetTitle('Payment Report');

// Remove default header/footer
$pdf->setPrintHeader(false);
$pdf->setPrintFooter(false);

// Set margins
$pdf->SetMargins(15, 15, 15);

// Add a page
$pdf->AddPage();

// Set font
$pdf->SetFont('helvetica', 'B', 16);

// College Header
$pdf->Cell(0, 8, 'Travel Ease', 0, 1, 'C');
$pdf->SetFont('helvetica', '', 12);
$pdf->Cell(0, 8, 'Koovappally- 686518, Kanjirappally', 0, 1, 'C');

// Add line
$pdf->Line(15, $pdf->GetY(), 195, $pdf->GetY());
$pdf->Ln(5);

// Report Title
$pdf->SetFont('helvetica', 'B', 14);
$pdf->Cell(0, 8, 'PAYMENT REPORT', 0, 1, 'C');
$pdf->Ln(5);

// Report Details
$pdf->SetFont('helvetica', '', 11);
$startY = $pdf->GetY();
$labelX = 20;
$valueX = 80;
$lineSpacing = 8;

$pdf->SetXY($labelX, $startY);
$pdf->Cell(50, 8, 'Report Period', 0);
$pdf->SetXY($valueX, $startY);
$pdf->Cell(0, 8, ': ' . date('d/m/Y', strtotime($startDate)) . ' - ' . date('d/m/Y', strtotime($endDate)), 0);

$pdf->SetXY($labelX, $startY + $lineSpacing);
$pdf->Cell(50, 8, 'Generated By', 0);
$pdf->SetXY($valueX, $startY + $lineSpacing);
$pdf->Cell(0, 8, ': Admin', 0);

$pdf->SetXY($labelX, $startY + $lineSpacing * 2);
$pdf->Cell(50, 8, 'System', 0);
$pdf->SetXY($valueX, $startY + $lineSpacing * 2);
$pdf->Cell(0, 8, ': Travel Ease Management', 0);

// Add line before summary
$pdf->Ln($lineSpacing * 3);
$pdf->Line(15, $pdf->GetY(), 195, $pdf->GetY());
$pdf->Ln(5);

// Payment Summary Section
$pdf->SetFont('helvetica', 'B', 12);
$pdf->Cell(0, 8, 'Payment Summary', 0, 1);
$pdf->Ln(2);

// Create summary table
$pdf->SetFont('helvetica', '', 10);
$summaryData = array(
    array('Total Payments', $totalPayments),
    array('Total Amount', 'Rs.' . formatNumber($totalAmount)),
    array('Successful Payments', $successfulPayments . ' (' . formatNumber($successfulPayments / $totalPayments * 100, 1) . '%)'),
    array('Failed Payments', $failedPayments . ' (' . formatNumber($failedPayments / $totalPayments * 100, 1) . '%)'),
    array('Average Payment', 'Rs.' . formatNumber($totalAmount / $totalPayments))
);

// Summary Table Headers
$pdf->SetFillColor(169, 169, 169);
$pdf->SetTextColor(0, 0, 0);
$pdf->SetFont('helvetica', 'B', 10);
$pdf->Cell(95, 8, 'Metric', 1, 0, 'L', true);
$pdf->Cell(85, 8, 'Value', 1, 1, 'L', true);

// Summary Table Content
$pdf->SetFont('helvetica', '', 10);
$pdf->SetFillColor(255, 255, 255);
foreach($summaryData as $row) {
    $pdf->Cell(95, 8, $row[0], 1, 0, 'L', true);
    $pdf->Cell(85, 8, $row[1], 1, 1, 'L', true);
}

$pdf->Ln(5);

// Payment Details Section
$pdf->SetFont('helvetica', 'B', 12);
$pdf->Cell(0, 8, 'Payment Details', 0, 1);
$pdf->Ln(2);

// Table headers for payment details
$pdf->SetFillColor(169, 169, 169);
$pdf->SetTextColor(0, 0, 0);
$pdf->SetFont('helvetica', 'B', 10);

// Set column widths
$w = array(25, 35, 40, 30, 30, 25);
$pdf->Cell($w[0], 8, 'Date', 1, 0, 'L', true);
$pdf->Cell($w[1], 8, 'Transaction ID', 1, 0, 'L', true);
$pdf->Cell($w[2], 8, 'Customer', 1, 0, 'L', true);
$pdf->Cell($w[3], 8, 'Amount', 1, 0, 'L', true);
$pdf->Cell($w[4], 8, 'Method', 1, 0, 'L', true);
$pdf->Cell($w[5], 8, 'Status', 1, 1, 'L', true);

// Table content
$pdf->SetFont('helvetica', '', 10);
$pdf->SetFillColor(255, 255, 255);

foreach($payments as $payment) {
    // Check if we need a new page
    if($pdf->GetY() > 250) {
        $pdf->AddPage();
        
        // Repeat headers on new page
        $pdf->SetFillColor(169, 169, 169);
        $pdf->SetFont('helvetica', 'B', 10);
        $pdf->Cell($w[0], 8, 'Date', 1, 0, 'L', true);
        $pdf->Cell($w[1], 8, 'Transaction ID', 1, 0, 'L', true);
        $pdf->Cell($w[2], 8, 'Customer', 1, 0, 'L', true);
        $pdf->Cell($w[3], 8, 'Amount', 1, 0, 'L', true);
        $pdf->Cell($w[4], 8, 'Method', 1, 0, 'L', true);
        $pdf->Cell($w[5], 8, 'Status', 1, 1, 'L', true);
        
        $pdf->SetFont('helvetica', '', 10);
        $pdf->SetFillColor(255, 255, 255);
    }
    
    $date = date('d/m/Y', strtotime($payment['payment_date']));
    $pdf->Cell($w[0], 8, $date, 1, 0, 'L', true);
    $pdf->Cell($w[1], 8, $payment['transaction_id'], 1, 0, 'L', true);
    $pdf->Cell($w[2], 8, $payment['user_name'], 1, 0, 'L', true);
    $pdf->Cell($w[3], 8, 'Rs.' . formatNumber($payment['amount']), 1, 0, 'L', true);
    $pdf->Cell($w[4], 8, $payment['payment_method'], 1, 0, 'L', true);
    $pdf->Cell($w[5], 8, $payment['payment_status'], 1, 1, 'L', true);
}

// Add footer line
$pdf->Ln(5);
$pdf->Line(15, 275, 195, 275);

// Add footer
$pdf->SetY(275);
$pdf->SetFont('helvetica', '', 10);
$pdf->Cell(60, 8, 'Travel Ease System Report', 0, 0, 'L');
$pdf->Cell(70, 8, 'Generated on: ' . date('d/m/Y'), 0, 0, 'C');
$pdf->Cell(60, 8, 'Page ' . $pdf->PageNo(), 0, 1, 'R');

// Output PDF
$pdf->Output('travel-ease-payment-report-' . $startDate . '-to-' . $endDate . '.pdf', 'D');

// Clean up
ob_end_flush();
$conn->close();

// Replace number_format with custom formatting function
function formatNumber($number, $decimals = 2) {
    $parts = explode('.', (string)$number);
    $whole = $parts[0];
    $decimal = isset($parts[1]) ? $parts[1] : '';
    
    // Add commas to whole number part
    $whole = preg_replace('/\B(?=(\d{3})+(?!\d))/', ',', $whole);
    
    // If decimals are needed, add them back
    if ($decimals > 0) {
        $decimal = str_pad($decimal, $decimals, '0');
        return $whole . '.' . substr($decimal, 0, $decimals);
    }
    
    return $whole;
}
?> 